{"version":3,"sources":["page/recipe/edit-recipe/component/HandleInputWork/index.tsx","page/recipe/edit-recipe/component/LabelBtn/index.tsx","page/recipe/edit-recipe/component/BasicForm/index.tsx","page/recipe/edit-recipe/index.tsx"],"names":["HandleInputWork","props","className","List","name","fields","add","remove","map","field","index","Item","label","required","key","validateTrigger","rules","whitespace","message","noStyle","placeholder","style","width","length","MinusCircleOutlined","margin","onClick","type","PlusOutlined","LabelBtn","console","log","useEffect","onChange","TextArea","Input","layout","labelCol","span","wrapperCol","tailLayout","offset","BasicForm","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","Option","value","initialValue","Group","valuePropName","getValueFromEvent","e","Array","isArray","fileList","extra","action","listType","UploadOutlined","to","marginRight","htmlType","TabPane","Tabs","tabs","tab","disabled","content","EditRecipe","defaultActiveKey","item"],"mappings":"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","file":"static/js/edit-recipe.9e30ba15.chunk.js","sourcesContent":["import React from 'react'\nimport './index.css'\nimport { Form, Input, Button, Checkbox,Select,Radio,Upload } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst layout = {\n    labelCol: { span: 0 },\n    wrapperCol: { span: 9 },\n};\n\ninterface Props{\n}\n\nconst HandleInputWork:React.FC<Props>=(props)=>{\n\n    return (\n        <div className=\"wrapper\">\n        <Form.List name=\"recipeIngredientList[0].foodName\">\n            {(fields, { add, remove }) => {\n            return (\n                <div>\n                {fields.map((field, index) => (\n                    <Form.Item\n                    label={index === 0 ? '' : ''}\n                    required={false}\n                    key={field.key}\n\n                    >\n                    <Form.Item\n                        {...field}\n                        validateTrigger={['onChange', 'onBlur']}\n                        // name='foodname'\n                        rules={[\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: \"Please input passenger's name or delete this field.\",\n                        },\n                        ]}\n                        noStyle\n                    >\n                        <Input placeholder=\"passenger name\" style={{ width: '60%' }} />\n                    </Form.Item>\n                    {fields.length > 1 ? (\n                        <MinusCircleOutlined\n                        className=\"dynamic-delete-button\"\n                        style={{ margin: '0 8px' }}\n                        onClick={() => {\n                            remove(field.name);\n                        }}\n                        />\n                    ) : null}\n                    </Form.Item>\n                ))}\n                <Form.Item>\n                    <Button\n                    type=\"dashed\"\n                    onClick={() => {\n                        add();\n                    }}\n                    style={{ width: '60%' }}\n                    >\n                    <PlusOutlined /> Add field\n                    </Button>\n                </Form.Item>\n                </div>\n            );\n            }}\n        </Form.List>\n        </div>\n    )\n}\n\nexport default HandleInputWork;","import React,{useEffect} from 'react'\nimport {Button} from 'antd';\nimport './index.css'\n\ninterface Props{\n    value?:number;\n    onChange?:any\n}\n\nconst LabelBtn:React.FC<Props>=(props)=>{\n    console.log(props,'props');\n\n    useEffect(() => {\n        props.onChange([1])\n    }, [])\n    \n    const triger = (e: number)=>{\n        // props.onChange([1])\n        props.onChange([1])\n    }\n    return (\n        <div className=\"label-wrapper\"> \n            <Button>热菜</Button>\n        </div>\n    )\n}\n\nexport default LabelBtn;","import React from 'react'\nimport { HashRouter as Router , Route, Link } from \"react-router-dom\";\nimport { Form, Input, Button, Checkbox,Select,Radio,Upload } from 'antd';\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\nimport HandleInputWork from '../HandleInputWork';\nimport LabelBtn from '../LabelBtn';\nconst {TextArea} = Input\nconst layout = {\n    labelCol: { span: 2 },\n    wrapperCol: { span: 9 },\n};\nconst tailLayout = {\n   wrapperCol: { offset:2, span: 8 },\n};\ninterface Props{\n\n}\nconst BasicForm:React.FC<Props>=(props)=> {\n\n    const onFinish = (values: any)=> {\n        console.log('Success:', values);\n      };\n    \n      const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n      };\n    \n      const normFile = (e: { fileList: any; }) => {\n        console.log('Upload event:', e);\n        if (Array.isArray(e)) {\n          return e;\n        }\n        return e && e.fileList;\n      };\n    return (\n        <div>\n            <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"食谱名称\"\n                    name=\"username\"\n                    rules={[{ required: true, message: '食谱名称不能为空!' }]}\n                    >\n                    <Input placeholder=\"请填写食谱名称\"/>\n                </Form.Item>\n                <Form.Item\n                    label=\"设备品类\"\n                    name=\"devType\"\n                    rules={[{ required: true, message: '设备品类不能为空!' }]}\n                    >\n                    <Select placeholder=\"请选择设备品类\">\n                        <Select.Option value=\"1\">高压锅</Select.Option>\n                        <Select.Option value=\"2\">电饼铛</Select.Option>\n                    </Select>\n                </Form.Item>    \n                <Form.Item label=\"图文类型\" \n                name=\"recipeType\"\n                rules={[{ required: true, message: '图文类型不能为空!' }]}\n                initialValue=\"1\"\n                >\n                <Radio.Group>\n                  <Radio value=\"1\">图文</Radio>\n                  <Radio value=\"0\">视频</Radio>\n                </Radio.Group>\n              </Form.Item>\n              <Form.Item\n                name=\"recipePic\"\n                label=\"食品封面\"\n                valuePropName=\"fileList\"\n                getValueFromEvent={normFile}\n                rules={[{ required: true, message: '食品封面不能为空!' }]}\n                extra=\"支持240*375px,jpg/jepg/png格式,最大不超过5M\"\n                >\n                <Upload name=\"file\" action=\"https://bizapi.csdn.net/blog-console-api/v3/upload/img?shuiyin=2\" listType=\"picture\">\n                    <Button>\n                       <UploadOutlined />上传文件\n                    </Button>\n                </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"介绍说明\"\n                    name=\"content\"\n                    rules={[{ required: true, message: '介绍说明不能为空!' }]}\n                    >\n                     <TextArea placeholder=\"请填写介绍说明\"/>\n                </Form.Item>\n                <Form.Item\n                    label=\"小贴士\"\n                    name=\"tip\"\n                    >\n                      <TextArea placeholder=\"请填写小贴士\"/>\n                </Form.Item>\n                <Form.Item\n                 label=\"选择标签\"\n                 name='tagIdList'\n                 valuePropName=\"value\"\n                 initialValue={[]}\n                 rules={[{ required: true, message: '标签不能为空!' }]}\n                >\n                    <LabelBtn/>\n                </Form.Item>\n                <Form.Item \n                 name=\"recipeIngredientList\"\n                 label=\"食材准备\"     \n                 initialValue={[]}            \n                 rules={[{ required: true, message: '食材准备不能为空!' }]}\n                >\n                   <HandleInputWork/>\n               </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                   <Link to=\"/recipe\">\n                    <Button type=\"default\" style={{marginRight:20}}>取消</Button>\n                    </Link>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                      保存\n                    </Button>\n              </Form.Item>\n            </Form>\n        </div>\n    )\n}\n\nexport default BasicForm;","import React from 'react'\nimport {Link } from \"react-router-dom\";\nimport BasicForm from './component/BasicForm'\nimport { Tabs } from 'antd';\nconst { TabPane } = Tabs;\n\ninterface Props{\n}\n\nconst tabs = [{\n    tab:'基本信息',key:\"1\",disabled:false,content:<BasicForm/>\n},{\n    tab:'创建步骤',key:\"2\",disabled:false,content:'step'\n}]\n\nconst EditRecipe:React.FC<Props>=(props)=>{\n\n    return (\n        <div className=\"wrapper\"> \n             <h2 style={{margin:20}}>编辑食谱</h2>\n             <Tabs defaultActiveKey=\"1\">\n                 {\n                    tabs.map(item=><TabPane {...item}>{item.content}</TabPane>)\n                 }\n             </Tabs>\n        </div>\n    )\n}\n\nexport default EditRecipe;"],"sourceRoot":""}